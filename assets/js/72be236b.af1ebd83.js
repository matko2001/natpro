"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9013],{3905:(a,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>c});var n=t(7294);function m(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function s(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function p(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){m(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function r(a,e){if(null==a)return{};var t,n,m=function(a,e){if(null==a)return{};var t,n,m={},s=Object.keys(a);for(n=0;n<s.length;n++)t=s[n],e.indexOf(t)>=0||(m[t]=a[t]);return m}(a,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(a);for(n=0;n<s.length;n++)t=s[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(m[t]=a[t])}return m}var i=n.createContext({}),o=function(a){var e=n.useContext(i),t=e;return a&&(t="function"==typeof a?a(e):p(p({},e),a)),t},l=function(a){var e=o(a.components);return n.createElement(i.Provider,{value:e},a.children)},k={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(a,e){var t=a.components,m=a.mdxType,s=a.originalType,i=a.parentName,l=r(a,["components","mdxType","originalType","parentName"]),N=o(t),c=m,h=N["".concat(i,".").concat(c)]||N[c]||k[c]||s;return t?n.createElement(h,p(p({ref:e},l),{},{components:t})):n.createElement(h,p({ref:e},l))}));function c(a,e){var t=arguments,m=e&&e.mdxType;if("string"==typeof a||m){var s=t.length,p=new Array(s);p[0]=N;var r={};for(var i in e)hasOwnProperty.call(e,i)&&(r[i]=e[i]);r.originalType=a,r.mdxType="string"==typeof a?a:m,p[1]=r;for(var o=2;o<s;o++)p[o]=t[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},903:(a,e,t)=>{t.d(e,{Z:()=>m});var n=t(7294);const m=a=>{let{authorName:e,githubUsername:t}=a;return n.createElement("div",{className:"author"},"Autor: ",n.createElement("a",{target:"_blank",href:"https://github.com/"+t},e))}},5884:(a,e,t)=>{t.d(e,{Z:()=>s});var n=t(7294);const{useState:m}=n,s=a=>{let{text:e}=a;const[t,s]=m(!1);return n.createElement("span",{onClick:()=>s(!t),className:"react-spoiler-"+(t?"shown":"hidden")},e)}},6352:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>N,frontMatter:()=>p,metadata:()=>i,toc:()=>l});var n=t(7462),m=(t(7294),t(3905)),s=t(903);t(5884);const p={title:"Najkra\u0107i putovi"},r=void 0,i={unversionedId:"algoritmi-nad-grafovima-1/najkraci-putovi",id:"algoritmi-nad-grafovima-1/najkraci-putovi",title:"Najkra\u0107i putovi",description:"Tra\u017eenje najkra\u0107eg puta izme\u0111u dva vrha grafa \u010dest je problem s puno prakti\u010dnih primjena. U nete\u017einskim grafovima duljina najkra\u0107eg puta odgovara broju bridova izme\u0111u dva odabrana vrha. Da bi prona\u0161li takav put, dovoljno je pustiti BFS iz po\u010detnog \u010dvora i odmah dobivamo rje\u0161enje. Ako je graf te\u017einski, stvar se malo komplicira \u0161to mo\u017eete vidjeti na slici ispod. BFS bi za zadani graf rekao da je najkra\u0107i put izme\u0111u 0 i 1 duljine 100, a mi odmah vidimo da to nije istina. Kako bi znali rije\u0161iti i ovakve probleme, pogledat \u0107emo nekoliko algoritama za najkra\u0107i put na te\u017einskim grafovima.",source:"@site/docs/algoritmi-nad-grafovima-1/najkraci-putovi.md",sourceDirName:"algoritmi-nad-grafovima-1",slug:"/algoritmi-nad-grafovima-1/najkraci-putovi",permalink:"/docs/algoritmi-nad-grafovima-1/najkraci-putovi",draft:!1,editUrl:"https://github.com/x-fer/natpro/edit/main/docs/algoritmi-nad-grafovima-1/najkraci-putovi.md",tags:[],version:"current",frontMatter:{title:"Najkra\u0107i putovi"},sidebar:"materijaliSidebar",previous:{title:"Pretra\u017eivanje grafova",permalink:"/docs/algoritmi-nad-grafovima-1/pretrazivanje-grafova"},next:{title:"Union-find struktura",permalink:"/docs/algoritmi-nad-grafovima-1/union-find-struktura"}},o={},l=[{value:"Bellman-Ford",id:"bellman-ford",level:2},{value:"Kako radi?",id:"kako-radi",level:3},{value:"Implementacija",id:"implementacija",level:3},{value:"Negativan ciklus",id:"negativan-ciklus",level:3},{value:"Dijkstrin algoritam",id:"dijkstrin-algoritam",level:2},{value:"Kako radi?",id:"kako-radi-1",level:3},{value:"Implementacija",id:"implementacija-1",level:3},{value:"Floyd-Warshall",id:"floyd-warshall",level:2},{value:"Kako radi?",id:"kako-radi-2",level:3},{value:"Implementacija",id:"implementacija-2",level:3},{value:"Usporedba algoritama",id:"usporedba-algoritama",level:2}],k={toc:l};function N(a){let{components:e,...t}=a;return(0,m.kt)("wrapper",(0,n.Z)({},k,t,{components:e,mdxType:"MDXLayout"}),(0,m.kt)(s.Z,{authorName:"Maja Milas",githubUsername:"javascript-m",mdxType:"Author"}),(0,m.kt)("p",null,"Tra\u017eenje najkra\u0107eg puta izme\u0111u dva vrha grafa \u010dest je problem s puno prakti\u010dnih primjena. U nete\u017einskim grafovima duljina najkra\u0107eg puta odgovara broju bridova izme\u0111u dva odabrana vrha. Da bi prona\u0161li takav put, dovoljno je pustiti BFS iz po\u010detnog \u010dvora i odmah dobivamo rje\u0161enje. Ako je graf te\u017einski, stvar se malo komplicira \u0161to mo\u017eete vidjeti na slici ispod. BFS bi za zadani graf rekao da je najkra\u0107i put izme\u0111u 0 i 1 duljine 100, a mi odmah vidimo da to nije istina. Kako bi znali rije\u0161iti i ovakve probleme, pogledat \u0107emo nekoliko algoritama za najkra\u0107i put na ",(0,m.kt)("strong",{parentName:"p"},"te\u017einskim grafovima"),"."),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/bfs_krivo.png",alt:"bfs_krivo",width:"250"}),(0,m.kt)("h2",{id:"bellman-ford"},"Bellman-Ford"),(0,m.kt)("p",null,"Bellman-Ford algoritam pronalazi duljinu najkra\u0107eg puta ",(0,m.kt)("strong",{parentName:"p"},"od nekog po\u010detnog vrha do svih ostalih")," vrhova u grafu. Algoritam radi na svim tipovima grafova pod uvjetom da nemaju ciklus s negativnom sumom te\u017eina. Ako u grafu postoji ciklus s negativnom te\u017einom, ovaj algoritam to mo\u017ee detektirati."),(0,m.kt)("p",null,"Algoritam za svaki vrh pamti njegovu udaljenost od po\u010detnog. Na po\u010detku znamo samo da je udaljenost od po\u010detnog do po\u010detnog nula, a sve ostale postavljamo na beskona\u010dno. U svakom koraku poku\u0161avamo popraviti te udaljenosti tako \u0161to prolazimo po listi bridova i provjeravamo mo\u017ee li se smanjiti udaljenost ako iskoristimo trenutni brid. Postupak ponavljamo dok udaljenosti nisu kona\u010dne."),(0,m.kt)("h3",{id:"kako-radi"},"Kako radi?"),(0,m.kt)("p",null,"Napravimo polje ",(0,m.kt)("inlineCode",{parentName:"p"},"distance")," u kojem na poziciji ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[i]")," pi\u0161e kolika je udaljenost od po\u010detnog do i-tog vrha i postavimo sve udaljenosti na ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"\u221e")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\infty")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u221e")))))," (\u010ditaj: neki ogroman broj). Cilj nam je smanjivati te udaljenosti tako da na kraju u ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[i]")," pi\u0161e duljina najkra\u0107eg puta do i-tog vrha. Ozna\u010dimo po\u010detni vrh slovom ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"p")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p")))))," i postavimo udaljenost do njega na nulu. Na slici ispod je po\u010detni vrh 1, a crvenom su bojom napisane vrijednosti u polju ",(0,m.kt)("inlineCode",{parentName:"p"},"distance"),"."),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/bf1.png",alt:"bf1",width:"300"}),(0,m.kt)("p",null,"Sada iteriramo po bridovima. Za svaki brid izme\u0111u ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))," i ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"b")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"b")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b")))))," te\u017eine ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"w")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"w")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02691em"}},"w")))))," provjeravamo mo\u017eemo li pomo\u0107u njega smanjiti udaljenost od po\u010detnog vrha. Odnosno, za brid (a, b, w) radimo ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[b] = min(distance[b], distance[a]+w)"),"."),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/bf2.png",alt:"bf2",width:"900"}),(0,m.kt)("p",null,"Na slici vidimo (vi\u0161e-manje) redoslijed prolaska kroz bridove te kako se polje ",(0,m.kt)("inlineCode",{parentName:"p"},"distance")," mijenja kada dodamo novi brid. U ovom smo primjeru bridove birali takvim redoslijedom da nakon samo jednog prolaska kroz sve imamo dobro napisane najkra\u0107e puteve. U praksi \u0107e redoslijed bridova biti nasumi\u010dan pa \u0107emo morati vi\u0161e puta ponoviti cijeli postupak dok ne dobijemo to\u010dne udaljenosti. Zato \u0107emo u kodu prolazak po bridovima ponavljati ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," puta (n je broj vrhova u grafu) jer svaki najkra\u0107i put mo\u017ee sadr\u017eavati maksimalno ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," brid pa \u0107e to uvijek biti dovoljno."),(0,m.kt)("p",null,"Ako je jo\u0161 ne\u0161to ostalo zbunjuju\u0107e, bacite oko na ovaj simpa gif sa ",(0,m.kt)("a",{parentName:"p",href:"https://kjaer.io/algorithms/"},"kjaer.io"),":"),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/bf_gif.gif",alt:"bf_gif",width:"900"}),(0,m.kt)("h3",{id:"implementacija"},"Implementacija"),(0,m.kt)("p",null,"U sljede\u0107oj je implementaciji graf spremljen kao lista bridova s te\u017einama (",(0,m.kt)("inlineCode",{parentName:"p"},"vector<tuple<int,int,int>> edgeList"),")."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},'//INF je neki veliki broj, p je pocetni vrh\nfor(int i=0; i<n; i++) distance[i] = INF;\ndistance[p] = 0;\n\nfor(int i=0; i<n-1; i++) {\n    for(auto e : edgeList) {\n        int a, b, w;\n        tie(a, b, w) = e; // "raspakira" tuple u a, b i w\n        distance[b] = min(distance[b], distance[a]+w);\n    }\n}\n\n')),(0,m.kt)("admonition",{title:"primijetite",type:"note"},(0,m.kt)("p",{parentName:"admonition"},"Slo\u017eenost ovog algoritma je ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n*m)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))),", gdje je ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," broj vrhova, a ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"m")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m")))))," broj bridova.")),(0,m.kt)("h3",{id:"negativan-ciklus"},"Negativan ciklus"),(0,m.kt)("p",null,"Ako u grafu postoji ciklus kojemu je suma te\u017eina negativna, ne mo\u017eemo dobro definirati najkra\u0107i put izme\u0111u dva \u010dvora zato \u0161to \u0107emo uvijek mo\u0107i jo\u0161 jednom obi\u0107i ciklus i smanjiti ukupan put. Ako nakon ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mn",{parentName:"mrow"},"1")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n-1")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.66666em",verticalAlign:"-0.08333em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},"1")))))," koraka i dalje mo\u017eemo popraviti put do nekog \u010dvora, to nam govori da graf ima negativan ciklus."),(0,m.kt)("h2",{id:"dijkstrin-algoritam"},"Dijkstrin algoritam"),(0,m.kt)("p",null,"Dijkstrin algoritam, kao i Bellman-Ford, pronalazi duljine najkra\u0107ih puteva ",(0,m.kt)("strong",{parentName:"p"},"od po\u010detnog vrha do svih ostalih"),". Prednost ovog algoritma je \u0161to je br\u017ei od Bellman-Forda pa ga mo\u017eemo koristiti i na ve\u0107im grafovima. Njegov nedostatak je \u0161to zahtijeva da graf nema bridove negativne te\u017eine \u0161to nije bio uvjet za Bellman-Ford."),(0,m.kt)("p",null,"Ideja algoritma je sli\u010dna BFS-u jer u svakom koraku obra\u0111ujemo jedan vrh i dodajemo u red njegove susjede koji jo\u0161 nisu obra\u0111eni. Razlika je u tome \u0161to \u0107e ovoga puta vrh koji idu\u0107i obra\u0111ujemo uvijek biti onaj koji trenutno ima najmanju udaljenost od po\u010detnog. Na taj \u0107emo na\u010din rije\u0161iti problem s po\u010detka lekcije."),(0,m.kt)("p",null,"Ako si malo zaboravio/la BFS, ovo je odli\u010dan trenutak da se podsjeti\u0161 prije nego nastavi\u0161 dalje. \ud83d\ude04"),(0,m.kt)("h3",{id:"kako-radi-1"},"Kako radi?"),(0,m.kt)("p",null,"Ponovno koristimo polje ",(0,m.kt)("inlineCode",{parentName:"p"},"distance")," analogno onom ranije te mu na isti na\u010din incijaliziramo vrijednosti prije provo\u0111enja algoritma. Po\u010detni vrh je 1 pa smo postavili udaljenost do njega na nulu."),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/dij1.png",alt:"dijkstra_1",width:"300"}),(0,m.kt)("p",null,"U svakom koraku biramo neobra\u0111eni vrh s najmanjom udaljenosti od po\u010detnog (trenutno ",(0,m.kt)("em",{parentName:"p"},"najbli\u017ei")," vrh) te poku\u0161avamo smanjiti udaljenost do svih njegovih susjeda."),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/dij2.png",alt:"dijkstra_2",width:"600"}),(0,m.kt)("p",null,"U prvom je koraku najbli\u017ei vrh 1 pa njega obra\u0111ujemo i popravljamo udaljenosti do njegovih susjeda koje potom dodajemo u red. U drugom koraku \u0107emo ponovno birati najbli\u017ei vrh, a to \u0107e sada biti 5 jer smo njegovu udaljenost popravili na 1 (ostale udaljenosti su 9 i 5). Postupak se nastavlja na isti na\u010din dok ne posjetimo sve vrhove. Dobra stvar kod ovog algoritma je \u0161to svaki vrh obra\u0111ujemo samo jednom i nakon toga ga ne moramo vi\u0161e provjeravati."),(0,m.kt)("h3",{id:"implementacija-1"},"Implementacija"),(0,m.kt)("p",null,"Da bi algoritam bio efikasan, moramo na brz na\u010din mo\u0107i do\u0107i do ",(0,m.kt)("strong",{parentName:"p"},"trenutno najbli\u017eeg neobra\u0111enog vrha"),". Bilo bi super kada bismo red koji nam slu\u017ei za pra\u0107enje vrhova imali u nekoj strukturi koja nam odmah vra\u0107a najbli\u017ei. Nakon malo kopanja po mo\u017edanoj arhivi, sjetit \u0107ete da bi za ovo priliku mogli koristiti prioritetni red (",(0,m.kt)("inlineCode",{parentName:"p"},"priority_queue"),") koji dr\u017ei elemente sortiranima i osigurava njihovo dodavanje u logaritamskoj slo\u017eenosti (dakle, jako brzo). Budu\u0107i da prioritetni red omogu\u0107ava pristup ",(0,m.kt)("em",{parentName:"p"},"najve\u0107em")," elementu, u njega \u0107emo spremati parove ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mo",{parentName:"mrow"},"\u2212"),(0,m.kt)("mi",{parentName:"mrow"},"d"),(0,m.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,m.kt)("mi",{parentName:"mrow"},"x"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(-d, x)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,m.kt)("span",{parentName:"span",className:"mpunct"},","),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))," gdje ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"d")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"d")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d")))))," ozna\u010dava trenutnu udaljenost vrha ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"x")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))),". Vrh s najmanjim ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"d")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"d")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"d")))))," \u0107e tada biti najmanje negativan i uzet \u0107emo ga s vrha reda."),(0,m.kt)("p",null,"U sljede\u0107oj je implementaciji graf spremljen kao ",(0,m.kt)("inlineCode",{parentName:"p"},"vector<vector<pair<int,int>>> adjList"),", odnosno kao lista susjedstva gdje je uz vrh napisana i te\u017eina brida. Po\u010detni vrh je ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"p")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"))))),". Koristimo i polje ",(0,m.kt)("inlineCode",{parentName:"p"},"processed")," u kojem zapisujemo jesmo li ve\u0107 posjetili neki vrh."),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"for(int i=0; i<n; i++) distance[i] = INF;\ndistance[p] = 0;\nq.push({0, p});\n\nwhile(!q.empty()) {\n    int a = q.top().second;\n    q.pop();\n\n    if(processed[a]) continue;\n    for(auto u : adjList[a]) {\n        int b = u.first, w = u.second;\n        if(distance[a]+w < distance[b]) {\n            distance[b] = distance[a] + w;\n            q.push({-distance[b], b});\n        }\n    }\n}\n\n")),(0,m.kt)("admonition",{title:"primijetite",type:"note"},(0,m.kt)("p",{parentName:"admonition"},"Slo\u017eenost ovog algoritma je ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mo",{parentName:"mrow"},"\u2217"),(0,m.kt)("mi",{parentName:"mrow"},"log"),(0,m.kt)("mo",{parentName:"mrow"},"\u2061"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n+m*\\log{m})")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.46528em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"\u2217"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},"lo",(0,m.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m")),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))," jer algoritam prolazi kroz sve vrhove i za svaki brid u priority_queue doda najvi\u0161e jedan par.")),(0,m.kt)("h2",{id:"floyd-warshall"},"Floyd-Warshall"),(0,m.kt)("p",null,"Floyd-Warshall algoritam za razliku od prethodna dva tra\u017ei ",(0,m.kt)("strong",{parentName:"p"},"najkra\u0107i put izme\u0111u svaka dva vrha grafa"),". Iz tog razloga ovoga puta koristimo 2D matricu ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[i][j]")," u kojoj su zapisane udaljenosti me\u0111u vrhovima. Na po\u010detku zaisujemo samo udaljenosti vrhova izme\u0111u kojih postoji brid, a ostale postavljamo na beskona\u010dno. Kasnije kombinacijom bridova popravljamo i ostale udaljenosti dok ne dobijemo to\u010dno rje\u0161enje."),(0,m.kt)("h3",{id:"kako-radi-2"},"Kako radi?"),(0,m.kt)("p",null,"Pogledajmo kako radi algoritam na sljede\u0107em grafu:"),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/fw1.png",alt:"floyd_warshall_graph",width:"300"}),(0,m.kt)("p",null,"Prvo napravimo matricu udaljenosti na sljede\u0107i na\u010din:"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"distance[i][j]=0")," ako je i=j"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"distance[i][j]=w")," ako postoji brid izme\u0111u vrhova i i j"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"distance[i][j]=INF")," ako ne postoji brid izme\u0111u vrhova i i j")),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/fw2.png",alt:"floyd_warshall_table",width:"300"}),(0,m.kt)("p",null,"Pri svakom koraku algoritam bira jedan vrh te preko njega poku\u0161ava popraviti udaljenosti do svih ostalih. Ako popravljamo udaljenosti pomo\u0107u nekog vrha ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"x")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))),", za svaka dva \u010dvora ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"a")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"a")))))," i ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"b")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"b")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.69444em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"b")))))," se pitamo je li bolja vrijednost ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[a][b]")," (njihova trenutna udaljenost) ili je bolje da idemo preko vrha ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"x")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"))))),", odnosno ",(0,m.kt)("inlineCode",{parentName:"p"},"distance[a][x] + distance[x][b]"),"?"),(0,m.kt)("img",{src:"/img/algoritmi-nad-grafovima-1/fw3.png",alt:"floyd_warshall_idea",width:"300"}),(0,m.kt)("h3",{id:"implementacija-2"},"Implementacija"),(0,m.kt)("p",null,"Ovaj je algoritam poznat po jednostavnoj implementaciji. Polje ",(0,m.kt)("inlineCode",{parentName:"p"},"distance")," inicijaliziramo s dvije petlje prema uputama gore i potom ra\u010dunamo najkra\u0107e udaljenosti:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"for (int k=1; k<=n; k++) {\n    for (int i=1; i<=n; i++) {\n        for (int j=1; j<=n; j++) {\n            // popravljanje udaljenosti i-j preko vrha k\n            distance[i][j] = min(distance[i][j], distance[i][k]+distance[k][j]);\n        }\n    }\n}\n")),(0,m.kt)("admonition",{title:"primijetite",type:"note"},(0,m.kt)("p",{parentName:"admonition"},"Vremenska slo\u017eenost ovog algoritma je ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"n"),(0,m.kt)("mn",{parentName:"msup"},"3")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^3)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))," (ugnije\u017e\u0111ene petlje), a prostorna ",(0,m.kt)("span",{parentName:"p",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"n"),(0,m.kt)("mn",{parentName:"msup"},"2")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^2)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))),".")),(0,m.kt)("h2",{id:"usporedba-algoritama"},"Usporedba algoritama"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:"center"}),(0,m.kt)("th",{parentName:"tr",align:"center"},"Bellman-Ford"),(0,m.kt)("th",{parentName:"tr",align:"center"},"Dijkstra"),(0,m.kt)("th",{parentName:"tr",align:"center"},"Floyd-Warshall"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"duljina najkra\u0107eg puta"),(0,m.kt)("td",{parentName:"tr",align:"center"},"od po\u010detnog vrha do svih ostalih"),(0,m.kt)("td",{parentName:"tr",align:"center"},"od po\u010detnog vrha do svih ostalih"),(0,m.kt)("td",{parentName:"tr",align:"center"},"izme\u0111u svih parova vrhova")),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"nedostatci"),(0,m.kt)("td",{parentName:"tr",align:"center"},"ne radi ako ima negativan ciklus"),(0,m.kt)("td",{parentName:"tr",align:"center"},"ne radi ako postoje bridovi negativne te\u017eine"),(0,m.kt)("td",{parentName:"tr",align:"center"},"prostorna slo\u017eenost ",(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"n"),(0,m.kt)("mn",{parentName:"msup"},"2")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^2)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:"center"},"vremenska slo\u017eenost"),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(nm)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("mi",{parentName:"mrow"},"n"),(0,m.kt)("mo",{parentName:"mrow"},"+"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mi",{parentName:"mrow"},"log"),(0,m.kt)("mo",{parentName:"mrow"},"\u2061"),(0,m.kt)("mi",{parentName:"mrow"},"m"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n+m\\log m)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}}),(0,m.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222222222222222em"}})),(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mop"},"lo",(0,m.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,m.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,m.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,m.kt)("td",{parentName:"tr",align:"center"},(0,m.kt)("span",{parentName:"td",className:"math math-inline"},(0,m.kt)("span",{parentName:"span",className:"katex"},(0,m.kt)("span",{parentName:"span",className:"katex-mathml"},(0,m.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,m.kt)("semantics",{parentName:"math"},(0,m.kt)("mrow",{parentName:"semantics"},(0,m.kt)("mi",{parentName:"mrow"},"O"),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,m.kt)("msup",{parentName:"mrow"},(0,m.kt)("mi",{parentName:"msup"},"n"),(0,m.kt)("mn",{parentName:"msup"},"3")),(0,m.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,m.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^3)")))),(0,m.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,m.kt)("span",{parentName:"span",className:"base"},(0,m.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,m.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,m.kt)("span",{parentName:"span",className:"mopen"},"("),(0,m.kt)("span",{parentName:"span",className:"mord"},(0,m.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,m.kt)("span",{parentName:"span",className:"msupsub"},(0,m.kt)("span",{parentName:"span",className:"vlist-t"},(0,m.kt)("span",{parentName:"span",className:"vlist-r"},(0,m.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,m.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,m.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,m.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,m.kt)("span",{parentName:"span",className:"mord mtight"},"3")))))))),(0,m.kt)("span",{parentName:"span",className:"mclose"},")"))))))))))}N.isMDXComponent=!0}}]);