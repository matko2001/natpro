"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6143],{3905:function(a,e,t){t.d(e,{Zo:function(){return l},kt:function(){return N}});var n=t(7294);function m(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function s(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){m(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function p(a,e){if(null==a)return{};var t,n,m=function(a,e){if(null==a)return{};var t,n,m={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(m[t]=a[t]);return m}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(m[t]=a[t])}return m}var i=n.createContext({}),o=function(a){var e=n.useContext(i),t=e;return a&&(t="function"==typeof a?a(e):s(s({},e),a)),t},l=function(a){var e=o(a.components);return n.createElement(i.Provider,{value:e},a.children)},k={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,m=a.mdxType,r=a.originalType,i=a.parentName,l=p(a,["components","mdxType","originalType","parentName"]),c=o(t),N=m,u=c["".concat(i,".").concat(N)]||c[N]||k[N]||r;return t?n.createElement(u,s(s({ref:e},l),{},{components:t})):n.createElement(u,s({ref:e},l))}));function N(a,e){var t=arguments,m=e&&e.mdxType;if("string"==typeof a||m){var r=t.length,s=new Array(r);s[0]=c;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=a,p.mdxType="string"==typeof a?a:m,s[1]=p;for(var o=2;o<r;o++)s[o]=t[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},903:function(a,e,t){var n=t(7294);e.Z=function(a){var e=a.authorName,t=a.githubUsername;return n.createElement("div",{className:"author"},"Autor: ",n.createElement("a",{target:"_blank",href:"https://github.com/"+t},e))}},5884:function(a,e,t){var n=t(7294),m=n.useState;e.Z=function(a){var e=a.text,t=m(!1),r=t[0],s=t[1];return n.createElement("span",{onClick:function(){return s(!r)},className:"react-spoiler-"+(r?"shown":"hidden")},e)}},8626:function(a,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return k},default:function(){return N}});var n=t(7462),m=t(3366),r=(t(7294),t(3905)),s=t(903),p=(t(5884),["components"]),i={title:"Bitni containeri"},o=void 0,l={unversionedId:"osnove-natjecateljskog-programiranja/bitni-containeri",id:"osnove-natjecateljskog-programiranja/bitni-containeri",title:"Bitni containeri",description:"\u0160to su containeri",source:"@site/docs/osnove-natjecateljskog-programiranja/bitni-containeri.md",sourceDirName:"osnove-natjecateljskog-programiranja",slug:"/osnove-natjecateljskog-programiranja/bitni-containeri",permalink:"/docs/osnove-natjecateljskog-programiranja/bitni-containeri",editUrl:"https://github.com/x-fer/natpro/edit/main/docs/osnove-natjecateljskog-programiranja/bitni-containeri.md",tags:[],version:"current",frontMatter:{title:"Bitni containeri"},sidebar:"materijaliSidebar",previous:{title:"O dobrim algoritmima",permalink:"/docs/osnove-natjecateljskog-programiranja/o-dobrim-algoritmima"},next:{title:"Sortiranje",permalink:"/docs/sortiranje-i-pretrazivanje/sortiranje"}},k=[{value:"\u0160to su containeri",id:"\u0161to-su-containeri",children:[],level:2},{value:"Vector",id:"vector",children:[],level:2},{value:"Set",id:"set",children:[],level:2},{value:"Map",id:"map",children:[],level:2},{value:"Iteratori",id:"iteratori",children:[],level:2},{value:"Pair",id:"pair",children:[],level:2},{value:"Tuple",id:"tuple",children:[],level:2},{value:"Ostali containeri",id:"ostali-containeri",children:[],level:2}],c={toc:k};function N(a){var e=a.components,t=(0,m.Z)(a,p);return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)(s.Z,{authorName:"Ivan Vlahov",githubUsername:"vlahovivan",mdxType:"Author"}),(0,r.kt)("h2",{id:"\u0161to-su-containeri"},"\u0160to su containeri"),(0,r.kt)("p",null,"U ovom poglavlju ukratko \u0107emo objasniti kako funkcioniraju i \u0161to su ",(0,r.kt)("em",{parentName:"p"},"containeri"),". ",(0,r.kt)("em",{parentName:"p"},"Container")," je objekt u koji mo\u017eemo spremiti vi\u0161e drugih objekata, te koriste\u0107i \u010dlanske funkcije na odre\u0111eni na\u010din manipulirati tim podacima, iterirati kroz njih, raditi odre\u0111ene upite i sli\u010dno kako bismo rije\u0161ili neki zadatak. U C++-u su ",(0,r.kt)("em",{parentName:"p"},"containeri")," implementirani kao ",(0,r.kt)("em",{parentName:"p"},"class template"),", \u0161to zna\u010di da u njih mo\u017eemo pohraniti bilo koju vrstu objekata. Kao \u0161to \u0107emo vidjeti u nastavku, razli\u010diti ",(0,r.kt)("em",{parentName:"p"},"containeri")," se razli\u010dito pona\u0161aju, pa po\u010dnimo od jednostavnijih."),(0,r.kt)("h2",{id:"vector"},"Vector"),(0,r.kt)("p",null,"Recimo da imate zadatak u kojem se od vas tra\u017ei da s ulaza \u010ditate brojeve sve dok ne u\u010ditate broj ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", a zatim trebate ispisati broj u\u010ditanih parnih brojeva te sve u\u010ditane parne brojeve onim redoslijedom kojim su u\u010ditani. Ovaj zadatak bismo mogli rije\u0161iti koriste\u0107i polje, me\u0111utim, postavlja se pitanje, kako odrediti veli\u010dinu tog polja? Mogli bismo naga\u0111ati da ne\u0107emo u\u010ditati vi\u0161e od npr. ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, pa postaviti veli\u010dinu polja na ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", te bi to rje\u0161enje izgledalo ovako nekako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int brojParnih = 0;\nint parniBrojevi[1000];\n\nint x;\n\ndo {\n    cin >> x;\n\n    if(x % 2 == 0) {\n        parniBrojevi[brojParnih] = x;\n        brojParnih++;\n    }\n} while(x != 0);\n\ncout << brojParnih << endl;\n\nfor(int i = 0; i < brojParnih; i++){\n    cout << parniBrojevi[i] << " ";\n}\n')),(0,r.kt)("p",null,"Me\u0111utim, o\u010dito je da na\u0161 program ne\u0107e raditi ako upi\u0161emo vi\u0161e od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva. Osim toga, ako upi\u0161emo puno manje od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, ostavit \u0107emo dobar dio rezervirane memorije neiskori\u0161tenom. Ovo su samo od nekih problema koje ",(0,r.kt)("em",{parentName:"p"},"container")," vector mo\u017ee rije\u0161iti."),(0,r.kt)("p",null,"Vector je dinami\u010dko polje, odnosno polje varijabilne duljine, kojem mo\u017eemo dodavati elemente na kraj te skidati elemente s kraja u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu (u ve\u0107ini slu\u010dajeva). Pomo\u0107u vectora rje\u0161enje gore navedenog zadatka bi izgledalo ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<int> parniBrojevi;\n\nint x;\n\ndo {\n    cin >> x;\n    \n    if(x % 2 == 0) parniBrojevi.push_back(x);\n} while(x != 0);\n\ncout << parniBrojevi.size() << endl;\n\nfor(auto broj : parniBrojevi){\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Kao \u0161to smo vidjeli, vector mo\u017eemo deklarirati linijom:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<tip> ime;\n")),(0,r.kt)("p",null,"gdje ",(0,r.kt)("inlineCode",{parentName:"p"},"tip")," ozna\u010dava tip podataka koji \u017eelimo spremiti u vector (npr. ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"char"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vector<int>")," itd.), a ",(0,r.kt)("inlineCode",{parentName:"p"},"ime")," ozna\u010dava ime varijable. U gornjem primjeru to smo u\u010dinili u retku ",(0,r.kt)("inlineCode",{parentName:"p"},"vector<int> parniBrojevi"),". Osim ovog na\u010dina mo\u017eemo i postaviti po\u010detni broj elemenata i njihovu po\u010detnu vrijednost:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Vector znakova veli\u010dine 100\nvector<char> vectorZnakova(100); \n\n// Vector doubleova veli\u010dine 314, svi elementi su postavljeni na 3.14159\nvector<double> vectorPijeva(314, 3.14159);\n")),(0,r.kt)("p",null,"Dodavanje na kraj vectora izvr\u0161avamo naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"push_back"),", a s kraja mo\u017eemo ukloniti element naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"pop_back"),". Elementima mo\u017eemo pristupiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," ili operatorom pristupa (uglate zagrade, ","[ ]","). Prvi element mo\u017eemo dohvatiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"front"),", a posljednji element naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"back"),". Veli\u010dinu polja mo\u017eemo dohvatiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),". Mo\u017eemo izbrisati sve elemente naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"clear"),". Sve navedene naredbe osim ",(0,r.kt)("inlineCode",{parentName:"p"},"clear")," su konstantne slo\u017eenosti, a ",(0,r.kt)("inlineCode",{parentName:"p"},"clear")," je linearne slo\u017eenosti, ovisno o veli\u010dini vectora."),(0,r.kt)("p",null,"Tako\u0111er, kao \u0161to smo vidjeli u gornjem rje\u0161enju zadatka, mo\u017eemo iterirati kroz sve elemente niza kori\u0161tenjem for-each petlje."),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o vectoru mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/vector/vector/"},"ovdje"),"."),(0,r.kt)("h2",{id:"set"},"Set"),(0,r.kt)("p",null,"Sljede\u0107a struktura o kojoj \u0107emo pri\u010dati je set. Set je struktura podataka u koju u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"l"),(0,r.kt)("mi",{parentName:"mrow"},"o"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(log(n))")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu mo\u017eemo dodati elemente tako da poredak ostane sortiran. Osim toga, mo\u017eemo provjeriti i nalazi li se neki element u skupu u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"l"),(0,r.kt)("mi",{parentName:"mrow"},"o"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(log(n))")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu."),(0,r.kt)("p",null,"Set definiramo ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"set<tip> ime;\n")),(0,r.kt)("p",null,"gdje ",(0,r.kt)("inlineCode",{parentName:"p"},"tip")," ozna\u010dava tip podataka koji \u017eelimo unositi u set, a ",(0,r.kt)("inlineCode",{parentName:"p"},"ime")," ozna\u010dava ime varijable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'set<int> parniBrojevi;\n\n// Redom dodajemo brojeve 10, 8, 6, 4 i 2\nfor(int i = 10; i > 0; i -= 2) {\n    parniBrojevi.insert(i);\n}\n\n// Ispisujemo sadr\u017eaj seta\nfor(auto broj : parniBrojevi) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2 4 6 8 10\n")),(0,r.kt)("p",null,"jer dodavanjem u set elemente postavljamo tako da set ostane sortiran uzlazno. Elemente dodajemo naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"insert"),", bri\u0161emo ih naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"erase"),", a osim toga mo\u017eemo i provjeriti nalazi li se neki element u setu naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," - vra\u0107a ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1")))))," ako se element nalazi, odnosno ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," ako se ne nalazi u skupu. Naredba ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," vra\u0107a broj elemenata u setu. U dijelu o iteratorima i \u010dlanku ",(0,r.kt)("a",{parentName:"p",href:"../sortiranje-i-pretrazivanje/binarno-pretrazivanje"},"Binarno pretra\u017eivanje")," pri\u010dat \u0107emo o jo\u0161 nekim naredbama nad setovima."),(0,r.kt)("p",null,"Pogledajmo sljede\u0107i primjer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'set<int> punoBrojeva;\n\n// Dodajemo redom vrijednosti:\n// 1, 1, 1, 2, 2, 2, 3, 3, 3\nfor(int i = 3; i < 12; i++) {\n    punoBrojeva.insert(i / 3);\n}\n\n// Ispisujemo elemente seta\nfor(auto broj : punoBrojeva) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1 2 3\n")),(0,r.kt)("p",null,"Naime, set ne prihva\u0107a duplikate, te \u0107e se vrijednosti ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"))))),", ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"2")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"2")))))," i ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3")))))," dodati samo jednom. U slu\u010daju da trebate strukturu sa sli\u010dnim karakteristikama kao set, a u koju se mogu dodati i duplikati, mo\u017eete koristiti strukturu multiset. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'multiset<int> punoBrojeva;\n\n// Dodajemo redom vrijednosti:\n// 1, 1, 1, 2, 2, 2, 3, 3, 3\nfor(int i = 3; i < 12; i++) {\n    punoBrojeva.insert(i / 3);\n}\n\n// Ispisujemo elemente seta\nfor(auto broj : punoBrojeva) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e ovaj put biti druga\u010diji:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1 1 1 2 2 2 3 3 3\n")),(0,r.kt)("h2",{id:"map"},"Map"),(0,r.kt)("p",null,"Jo\u0161 jedna u nizu struktura o kojima \u0107emo pri\u010dati je map. U map se spremaju parovi klju\u010d-vrijednost, te im mo\u017eemo pristupati u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"l"),(0,r.kt)("mi",{parentName:"mrow"},"o"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(log(n))")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu, gdje ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," ozna\u010dava broj klju\u010deva u mapi."),(0,r.kt)("p",null,"Recimo da imamo zadatak u kojem se od nas tra\u017ei da u\u010ditamo ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," brojeva, te ispi\u0161emo koliko je puta koji broj u\u010ditan. Kad bismo znali da \u0107e ti brojevi biti npr. manji od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", mogli bismo napraviti polje cijelih brojeva te u njega spremati koliko se puta koji broj pojavio."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int n;\ncin >> n;\n\n// Postavljamo sve elemente polja na 0\nint brojPojavljivanja[1000] = {0};\n\nfor(int i = 0; i < n; i++) {\n    int broj;\n    cin >> broj;\n\n    brojPojavljivanja[broj]++;\n}\n\nfor(int i = 0; i < 1000; i++) {\n    if(brojPojavljivanja[i] > 0) {\n        cout << "Broj " << i << " se pojavio " << brojPojavljivanja[i] << " puta.\\n";\n    }\n}\n')),(0,r.kt)("p",null,"Me\u0111utim, kada bi u\u010ditani brojevi bili puno ve\u0107i od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", npr. veli\u010dine do ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"0"),(0,r.kt)("mn",{parentName:"msup"},"9"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10^{9}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"9"))))))))))))),", ne bismo mogli napraviti polje te veli\u010dine. Taj problem mo\u017eemo lako rije\u0161iti koriste\u0107i mapu."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int n;\ncin >> n;\n\nmap<int, int> brojPojavljivanja;\n\nfor(int i = 0; i < n; i++) {\n    int broj;\n    cin >> broj;\n\n    brojPojavljivanja[broj]++;\n}\n\nfor(auto par : brojPojavljivanja) {\n    cout << "Broj " << par.first << " se pojavio " << par.second << " puta.\\n";\n}\n')),(0,r.kt)("p",null,"Za ulaz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"4\n1 300 500 500\n")),(0,r.kt)("p",null,"Izlaz \u0107e u oba slu\u010daja izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Broj 1 se pojavio 1 puta.\nBroj 300 se pojavio 1 puta.\nBroj 500 se pojavio 2 puta.\n")),(0,r.kt)("p",null,"Rje\u0161enje s mapom je dosta elegantnije, i u najgorem slu\u010daju (kada su svi brojevi razli\u010diti) zauzima ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," memorije. Mo\u017eda ste primijetili da nigdje nismo inicirali vrijednosti unutar mape, nego smo ih samo pove\u0107avali. Naime, operator pristupa ","[ ]",", u slu\u010daju da mapa ne sadr\u017ei klju\u010d s kojim je pozvan, kreira taj klju\u010d i postavlja njegovu vrijednost na neku zadanu vrijednost, u ovom slu\u010daju ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),". Da smo htjeli po\u010deti od neke druge vrijednosti, morali bismo eksplicitno provjeravati nalazi li se klju\u010d u mapi naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"count"),", te postaviti tu vrijednost ako klju\u010d ne postoji. Jo\u0161 jedna stvar koju ste mogli primijetiti jest da se for-each petljom kroz parove iterira uzlazno ovisno o klju\u010du. "),(0,r.kt)("h2",{id:"iteratori"},"Iteratori"),(0,r.kt)("p",null,"Tijekom rada s ",(0,r.kt)("em",{parentName:"p"},"containerima")," kao \u0161to su ",(0,r.kt)("inlineCode",{parentName:"p"},"vector")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"set"),", \u010desto \u0107ete se susretati s funkcijama koje kao parametre primaju ",(0,r.kt)("em",{parentName:"p"},"iteratore"),". U ovom \u010dlanku \u0107emo govoriti o iteratorima i dat \u0107emo nekoliko primjera iteratora za koje biste trebali znati."),(0,r.kt)("p",null,"Iteratori slu\u017ee kao pokaziva\u010di na elemente odre\u0111enih ",(0,r.kt)("em",{parentName:"p"},"containera"),". Pomo\u0107u njih mo\u017eemo, kao \u0161to im ime govori, iterirati kroz elemente odre\u0111enih struktura te ih koristiti kao parametre u brojnim algoritmima standardne biblioteke. Podacima na koje iteratori pokazuju pristupamo koriste\u0107i operator ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"."),(0,r.kt)("p",null,"Uzmimo za primjer jedan ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," i jedan ",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"set<int> s = {1, 2, 3, 4, 5, 6}; // jos jedan nacin za dodati elemente u set\nvector<int> v = {1, 1, 2, 3, 5, 8}; // jos jedan nacin za dodati elemente u vector\n")),(0,r.kt)("p",null,"Prva funkcija kojom \u0107emo se baviti je \u010dlanska funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"begin"),". Ona vra\u0107a iterator na prvi element niza, pa bi za na\u0161e ",(0,r.kt)("em",{parentName:"p"},"containere")," iz primjera to izgledalo ovako (sjetimo se da podacima pristupamo koriste\u0107i operator ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'cout << *s.begin() << "\\n"; // ispisuje 1\ncout << *v.begin() << "\\n"; // ispisuje 1\n')),(0,r.kt)("p",null,"Druga funkcija je funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),". Ona vra\u0107a iterator na poziciju ",(0,r.kt)("strong",{parentName:"p"},"nakon")," posljednjeg elementa niza. Mo\u017eemo je koristiti u for petlji da bismo provjerili jesmo li do\u0161li do kraja iteracije, a tako\u0111er se koristi u mno\u0161tvu funkcija o kojima \u0107emo kasnije vi\u0161e govoriti."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// it++ mijenja iterator tako da pokazuje na sljede\u0107i element niza\nfor(auto it = s.begin(); it != s.end(); it++) {\n    cout << *it << " ";\n}\n')),(0,r.kt)("p",null,"Ovaj isje\u010dak koda \u0107e ispisati sve \u010dlanove seta."),(0,r.kt)("p",null,"Sli\u010dne funkcijama ",(0,r.kt)("inlineCode",{parentName:"p"},"begin")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"end")," su funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"rbegin")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"rend")," koje vra\u0107aju ",(0,r.kt)("em",{parentName:"p"},"reverse iteratore"),", odnosno iterator koji pokazuje na posljednji element niza i iterator koji pokazuje na poziciju ",(0,r.kt)("strong",{parentName:"p"},"prije")," prvog elementa niza."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'for(auto it = s.rbegin(); it != s.rend(); it++) {\n    cout << *it << " ";\n}\n')),(0,r.kt)("p",null,"Ovaj isje\u010dak \u0107e ispisati sve \u010dlanove seta, ali obrnutim redoslijedom."),(0,r.kt)("p",null,"Funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"prev")," kao argumente primaju iterator i cijeli broj ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", a vra\u0107aju iterator za ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," pozicija ispred ili iza zadanog iteratora. Ako ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," nije zadan, podrazumijevana vrijednost je 1. Ove funkcije ne mijenjaju poziciju zadanog iteratora."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'cout << *next(s.begin(), 2) << "\\n"; // ispisuje 3\ncout << *prev(s.end(), 2) << "\\n"; // ispisuje 5\n')),(0,r.kt)("p",null,"Funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"advance")," kao argumente prima iterator i cijeli broj ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", te ",(0,r.kt)("strong",{parentName:"p"},"mijenja")," zadani iterator tako da mu pomakne poziciju za ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," mjesta."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'auto it = s.begin();\ncout << *it << "\\n"; // ispisuje 1\n\nadvance(it, 3);\ncout << *it << "\\n"; // ispisuje 4\n\nadvance(it, -1);\ncout << *it << "\\n"; // ispisuje 3\n')),(0,r.kt)("p",null,"U poglavlju o sortiranju i pretra\u017eivanju \u0107emo pri\u010dati vi\u0161e o prakti\u010dnim primjenama iteratora."),(0,r.kt)("h2",{id:"pair"},"Pair"),(0,r.kt)("p",null,"\u017delimo li u jedan objekt spremiti dva podatka (npr. ime i godine neke osobe), koristimo strukturu pair. Definiramo je na jedan od sljede\u0107ih na\u010dina:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'pair<string, int> ivan = {"Ivan", 21};\npair<string, int> luka = make_pair("Luka", 24);\n')),(0,r.kt)("p",null,"Podacima pristupamo koriste\u0107i \u010dlanove ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"second"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'cout << ivan.first << " " << ivan.second << "\\n";\ncout << luka.first << " " << luka.second << "\\n";\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivan 21\nLuka 24\n")),(0,r.kt)("p",null,"Vi\u0161e o strukturi pair mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/utility/pair/pair/"},"ovdje"),"."),(0,r.kt)("h2",{id:"tuple"},"Tuple"),(0,r.kt)("p",null,"\u017delimo li spremiti vi\u0161e podataka (npr. ime, godine i prosjek ocjena), mo\u017eemo koristiti tuple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'tuple<string, int, double> ivana = {"Ivana", 22, 4.8};\ntuple<string, int, double> lucija = make_tuple("Lucija", 23, 3.95); \n')),(0,r.kt)("p",null,"\u010clanovima pristupamo koriste\u0107i funkciju ",(0,r.kt)("inlineCode",{parentName:"p"},"get<>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cout << get<0>(ivana) << " " << get<1>(ivana) << " " << get<2>(ivana) << "\\n";\ncout << get<0>(lucija) << " " << get<1>(lucija) << " " << get<2>(lucija) << "\\n";\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivana 22 4.8\nLucija 23 3.95\n")),(0,r.kt)("p",null,"Vi\u0161e o strukturi tuple mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/tuple/tuple/"},"ovdje"),"."),(0,r.kt)("h2",{id:"ostali-containeri"},"Ostali containeri"),(0,r.kt)("p",null,"Osim navedenih, na sljede\u0107im linkovima mo\u017eete prona\u0107i i dokumentaciju ostalih ",(0,r.kt)("em",{parentName:"p"},"containera")," koji bi vam mogli zatrebati tijekom rje\u0161avanja zadataka:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/queue/queue/"},"queue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/deque/deque/"},"deque")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/queue/priority_queue/"},"priority_queue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/stack/stack/"},"stack")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/forward_list/forward_list/"},"forward_list")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/list/list/"},"list")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_set/unordered_set/"},"unordered_set")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_set/unordered_multiset/"},"unordered_multiset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_map/unordered_map/"},"unordered_map")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/map/multimap/"},"multimap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_map/unordered_multimap/"},"unordered_multimap"))))}N.isMDXComponent=!0}}]);