"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6143],{3905:function(a,e,t){t.d(e,{Zo:function(){return l},kt:function(){return u}});var n=t(7294);function i(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function p(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){i(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function m(a,e){if(null==a)return{};var t,n,i=function(a,e){if(null==a)return{};var t,n,i={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(i[t]=a[t]);return i}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(i[t]=a[t])}return i}var s=n.createContext({}),o=function(a){var e=n.useContext(s),t=e;return a&&(t="function"==typeof a?a(e):p(p({},e),a)),t},l=function(a){var e=o(a.components);return n.createElement(s.Provider,{value:e},a.children)},k={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,i=a.mdxType,r=a.originalType,s=a.parentName,l=m(a,["components","mdxType","originalType","parentName"]),c=o(t),u=i,N=c["".concat(s,".").concat(u)]||c[u]||k[u]||r;return t?n.createElement(N,p(p({ref:e},l),{},{components:t})):n.createElement(N,p({ref:e},l))}));function u(a,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof a||i){var r=t.length,p=new Array(r);p[0]=c;var m={};for(var s in e)hasOwnProperty.call(e,s)&&(m[s]=e[s]);m.originalType=a,m.mdxType="string"==typeof a?a:i,p[1]=m;for(var o=2;o<r;o++)p[o]=t[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},903:function(a,e,t){var n=t(7294);e.Z=function(a){var e=a.authorName,t=a.githubUsername;return n.createElement("div",{className:"author"},"Autor: ",n.createElement("a",{target:"_blank",href:"https://github.com/"+t},e))}},5884:function(a,e,t){var n=t(7294),i=n.useState;e.Z=function(a){var e=a.text,t=i(!1),r=t[0],p=t[1];return n.createElement("span",{onClick:function(){return p(!r)},className:"react-spoiler-"+(r?"shown":"hidden")},e)}},8626:function(a,e,t){t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return k},default:function(){return u}});var n=t(7462),i=t(3366),r=(t(7294),t(3905)),p=t(903),m=(t(5884),["components"]),s={title:"Bitni containeri"},o=void 0,l={unversionedId:"osnove-natjecateljskog-programiranja/bitni-containeri",id:"osnove-natjecateljskog-programiranja/bitni-containeri",title:"Bitni containeri",description:"\u0160to su containeri?",source:"@site/docs/osnove-natjecateljskog-programiranja/bitni-containeri.md",sourceDirName:"osnove-natjecateljskog-programiranja",slug:"/osnove-natjecateljskog-programiranja/bitni-containeri",permalink:"/docs/osnove-natjecateljskog-programiranja/bitni-containeri",editUrl:"https://github.com/x-fer/natpro/edit/main/docs/osnove-natjecateljskog-programiranja/bitni-containeri.md",tags:[],version:"current",frontMatter:{title:"Bitni containeri"},sidebar:"materijaliSidebar",previous:{title:"O dobrim algoritmima",permalink:"/docs/osnove-natjecateljskog-programiranja/o-dobrim-algoritmima"},next:{title:"Sortiranje",permalink:"/docs/sortiranje-i-pretrazivanje/sortiranje"}},k=[{value:"\u0160to su containeri?",id:"\u0161to-su-containeri",children:[],level:2},{value:"Vektor",id:"vektor",children:[],level:2},{value:"Set",id:"set",children:[],level:2},{value:"Mapa",id:"mapa",children:[],level:2},{value:"Red",id:"red",children:[],level:2},{value:"Prioritetni red",id:"prioritetni-red",children:[],level:2},{value:"Stog",id:"stog",children:[],level:2},{value:"Iteratori",id:"iteratori",children:[],level:2},{value:"Pair",id:"pair",children:[],level:2},{value:"Tuple",id:"tuple",children:[],level:2},{value:"Ostali containeri",id:"ostali-containeri",children:[],level:2},{value:"Vrijednost ili referenca?",id:"vrijednost-ili-referenca",children:[],level:2}],c={toc:k};function u(a){var e=a.components,t=(0,i.Z)(a,m);return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)(p.Z,{authorName:"Ivan Vlahov",githubUsername:"vlahovivan",mdxType:"Author"}),(0,r.kt)("h2",{id:"\u0161to-su-containeri"},"\u0160to su containeri?"),(0,r.kt)("p",null,"U ovom poglavlju ukratko \u0107emo objasniti kako funkcioniraju i \u0161to su ",(0,r.kt)("em",{parentName:"p"},"containeri"),". ",(0,r.kt)("em",{parentName:"p"},"Container")," je objekt u koji mo\u017eemo spremiti vi\u0161e drugih objekata, te koriste\u0107i \u010dlanske funkcije na odre\u0111eni na\u010din manipulirati tim podacima, iterirati kroz njih, raditi odre\u0111ene upite i sli\u010dno kako bismo rije\u0161ili neki zadatak. U C++-u su ",(0,r.kt)("em",{parentName:"p"},"containeri")," implementirani kao ",(0,r.kt)("em",{parentName:"p"},"class template"),", \u0161to zna\u010di da u njih mo\u017eemo pohraniti bilo koju vrstu objekata. Kao \u0161to \u0107emo vidjeti u nastavku, razli\u010diti ",(0,r.kt)("em",{parentName:"p"},"containeri")," se razli\u010dito pona\u0161aju, pa po\u010dnimo od jednostavnijih."),(0,r.kt)("h2",{id:"vektor"},"Vektor"),(0,r.kt)("p",null,"Recimo da imate zadatak u kojem se od vas tra\u017ei da s ulaza \u010ditate brojeve sve dok ne u\u010ditate broj ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", a zatim trebate ispisati broj u\u010ditanih parnih brojeva te sve u\u010ditane parne brojeve onim redoslijedom kojim su u\u010ditani. Ovaj zadatak bismo mogli rije\u0161iti koriste\u0107i polje, me\u0111utim, postavlja se pitanje, kako odrediti veli\u010dinu tog polja? Mogli bismo naga\u0111ati da ne\u0107emo u\u010ditati vi\u0161e od npr. ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, pa postaviti veli\u010dinu polja na ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", te bi to rje\u0161enje izgledalo ovako nekako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int brojParnih = 0;\nint parniBrojevi[1000];\n\nint x;\n\ndo {\n    cin >> x;\n\n    if(x % 2 == 0) {\n        parniBrojevi[brojParnih] = x;\n        brojParnih++;\n    }\n} while(x != 0);\n\ncout << brojParnih << endl;\n\nfor(int i = 0; i < brojParnih; i++){\n    cout << parniBrojevi[i] << " ";\n}\n')),(0,r.kt)("p",null,"Me\u0111utim, o\u010dito je da na\u0161 program ne\u0107e raditi ako upi\u0161emo vi\u0161e od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva. Osim toga, ako upi\u0161emo puno manje od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, ostavit \u0107emo velik dio rezervirane memorije neiskori\u0161tenom. Ovo su samo neki od problema koje ",(0,r.kt)("em",{parentName:"p"},"container")," vektor mo\u017ee rije\u0161iti."),(0,r.kt)("p",null,"Vektor je dinami\u010dko polje, odnosno polje varijabilne duljine, kojem mo\u017eemo dodavati elemente na kraj te skidati elemente s kraja u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu (u ve\u0107ini slu\u010dajeva). Pomo\u0107u vektora rje\u0161enje gore navedenog zadatka bi izgledalo ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'vector<int> parniBrojevi;\n\nint x;\n\ndo {\n    cin >> x;\n    \n    if(x % 2 == 0) parniBrojevi.push_back(x);\n} while(x != 0);\n\ncout << parniBrojevi.size() << endl;\n\nfor(auto broj : parniBrojevi){\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Kao \u0161to smo vidjeli, vektor mo\u017eemo deklarirati linijom:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<tip> ime;\n")),(0,r.kt)("p",null,"gdje ",(0,r.kt)("inlineCode",{parentName:"p"},"tip")," ozna\u010dava tip podataka koji \u017eelimo spremiti u vektor (npr. ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"char"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vector<int>")," itd.), a ",(0,r.kt)("inlineCode",{parentName:"p"},"ime")," ozna\u010dava ime varijable. U gornjem primjeru to smo u\u010dinili u retku ",(0,r.kt)("inlineCode",{parentName:"p"},"vector<int> parniBrojevi"),". Osim ovog na\u010dina mo\u017eemo i postaviti po\u010detni broj elemenata i njihovu po\u010detnu vrijednost:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Vektor znakova veli\u010dine 100\nvector<char> vektorZnakova(100); \n\n// Vektor doubleova veli\u010dine 314, svi elementi su postavljeni na 3.14159\nvector<double> vektorPijeva(314, 3.14159);\n")),(0,r.kt)("p",null,"Dodavanje na kraj vektora izvr\u0161avamo naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"push_back"),", a s kraja mo\u017eemo ukloniti element naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"pop_back"),". Elementima mo\u017eemo pristupiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," ili operatorom pristupa (uglate zagrade, ","[ ]","). Prvi element mo\u017eemo dohvatiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"front"),", a posljednji element naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"back"),". Veli\u010dinu polja mo\u017eemo dohvatiti naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),". Mo\u017eemo izbrisati sve elemente naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"clear"),". Sve navedene naredbe osim ",(0,r.kt)("inlineCode",{parentName:"p"},"clear")," su konstantne slo\u017eenosti, a ",(0,r.kt)("inlineCode",{parentName:"p"},"clear")," je linearne slo\u017eenosti, ovisno o veli\u010dini vektora."),(0,r.kt)("p",null,"Tako\u0111er, kao \u0161to smo vidjeli u gornjem rje\u0161enju zadatka, mo\u017eemo iterirati kroz sve elemente niza kori\u0161tenjem range-based for petlje."),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o vektoru mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/vector/vector/"},"ovdje"),"."),(0,r.kt)("h2",{id:"set"},"Set"),(0,r.kt)("p",null,"Sljede\u0107a struktura o kojoj \u0107emo pri\u010dati je set. Set je struktura podataka u koju u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"log"),(0,r.kt)("mo",{parentName:"mrow"},"\u2061"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\log n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mop"},"lo",(0,r.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu mo\u017eemo dodati elemente tako da poredak ostane sortiran. Osim toga, mo\u017eemo provjeriti i nalazi li se neki element u skupu u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"log"),(0,r.kt)("mo",{parentName:"mrow"},"\u2061"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\log n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mop"},"lo",(0,r.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu."),(0,r.kt)("p",null,"Set definiramo ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"set<tip> ime;\n")),(0,r.kt)("p",null,"gdje ",(0,r.kt)("inlineCode",{parentName:"p"},"tip")," ozna\u010dava tip podataka koji \u017eelimo unositi u set, a ",(0,r.kt)("inlineCode",{parentName:"p"},"ime")," ozna\u010dava ime varijable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'set<int> parniBrojevi;\n\n// Redom dodajemo brojeve 10, 8, 6, 4 i 2\nfor(int i = 10; i > 0; i -= 2) {\n    parniBrojevi.insert(i);\n}\n\n// Ispisujemo sadr\u017eaj seta\nfor(auto broj : parniBrojevi) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2 4 6 8 10\n")),(0,r.kt)("p",null,"jer dodavanjem u set elemente postavljamo tako da set ostane sortiran uzlazno. Elemente dodajemo naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"insert"),", bri\u0161emo ih naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"erase"),", a osim toga mo\u017eemo i provjeriti nalazi li se neki element u setu naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," - vra\u0107a ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1")))))," ako se element nalazi, odnosno ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0")))))," ako se ne nalazi u skupu. Naredba ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," vra\u0107a broj elemenata u setu. U dijelu o iteratorima i \u010dlanku ",(0,r.kt)("a",{parentName:"p",href:"../sortiranje-i-pretrazivanje/binarno-pretrazivanje"},"Binarno pretra\u017eivanje")," pri\u010dat \u0107emo o jo\u0161 nekim naredbama nad setovima."),(0,r.kt)("p",null,"Pogledajmo sljede\u0107i primjer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'set<int> punoBrojeva;\n\n// Dodajemo redom vrijednosti:\n// 1, 1, 1, 2, 2, 2, 3, 3, 3\nfor(int i = 3; i < 12; i++) {\n    punoBrojeva.insert(i / 3);\n}\n\n// Ispisujemo elemente seta\nfor(auto broj : punoBrojeva) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1 2 3\n")),(0,r.kt)("p",null,"Naime, set ne prihva\u0107a duplikate, te \u0107e se vrijednosti ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"))))),", ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"2")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"2")))))," i ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3")))))," dodati samo jednom. U slu\u010daju da trebate strukturu sa sli\u010dnim karakteristikama kao set, a u koju se mogu dodati i duplikati, mo\u017eete koristiti strukturu multiset. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'multiset<int> punoBrojeva;\n\n// Dodajemo redom vrijednosti:\n// 1, 1, 1, 2, 2, 2, 3, 3, 3\nfor(int i = 3; i < 12; i++) {\n    punoBrojeva.insert(i / 3);\n}\n\n// Ispisujemo elemente seta\nfor(auto broj : punoBrojeva) {\n    cout << broj << " ";\n}\n')),(0,r.kt)("p",null,"Ispis \u0107e ovaj put biti druga\u010diji:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1 1 1 2 2 2 3 3 3\n")),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o setu mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/set/set/"},"ovdje"),"."),(0,r.kt)("h2",{id:"mapa"},"Mapa"),(0,r.kt)("p",null,"Jo\u0161 jedna u nizu struktura o kojima \u0107emo pri\u010dati je mapa. U mapu se spremaju parovi klju\u010d-vrijednost, te im mo\u017eemo pristupati u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"log"),(0,r.kt)("mo",{parentName:"mrow"},"\u2061"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\log n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mop"},"lo",(0,r.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.16666666666666666em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," vremenu, gdje ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," ozna\u010dava broj klju\u010deva u mapi."),(0,r.kt)("p",null,"Recimo da imamo zadatak u kojem se od nas tra\u017ei da u\u010ditamo ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.43056em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," brojeva, te ispi\u0161emo koliko je puta koji broj u\u010ditan. Kad bismo znali da \u0107e ti brojevi biti npr. manji od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", mogli bismo napraviti polje cijelih brojeva te u njega spremati koliko se puta koji broj pojavio."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int n;\ncin >> n;\n\n// Postavljamo sve elemente polja na 0\nint brojPojavljivanja[1000] = {0};\n\nfor(int i = 0; i < n; i++) {\n    int broj;\n    cin >> broj;\n\n    brojPojavljivanja[broj]++;\n}\n\nfor(int i = 0; i < 1000; i++) {\n    if(brojPojavljivanja[i] > 0) {\n        cout << "Broj " << i << " se pojavio " << brojPojavljivanja[i] << " puta.\\n";\n    }\n}\n')),(0,r.kt)("p",null,"Me\u0111utim, kada bi u\u010ditani brojevi bili puno ve\u0107i od ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1000")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),", npr. veli\u010dine do ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"0"),(0,r.kt)("mn",{parentName:"msup"},"9"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10^{9}")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"9"))))))))))))),", ne bismo mogli napraviti polje te veli\u010dine. Taj problem mo\u017eemo lako rije\u0161iti koriste\u0107i mapu."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int n;\ncin >> n;\n\nmap<int, int> brojPojavljivanja;\n\nfor(int i = 0; i < n; i++) {\n    int broj;\n    cin >> broj;\n\n    brojPojavljivanja[broj]++;\n}\n\nfor(auto par : brojPojavljivanja) {\n    cout << "Broj " << par.first << " se pojavio " << par.second << " puta.\\n";\n}\n')),(0,r.kt)("p",null,"Za ulaz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"4\n1 300 500 500\n")),(0,r.kt)("p",null,"Izlaz \u0107e u oba slu\u010daja izgledati ovako:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Broj 1 se pojavio 1 puta.\nBroj 300 se pojavio 1 puta.\nBroj 500 se pojavio 2 puta.\n")),(0,r.kt)("p",null,"Rje\u0161enje s mapom je dosta elegantnije, i u najgorem slu\u010daju (kada su svi brojevi razli\u010diti) zauzima ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," memorije. Mo\u017eda ste primijetili da nigdje nismo inicirali vrijednosti unutar mape, nego smo ih samo pove\u0107avali. Naime, operator pristupa ","[ ]",", u slu\u010daju da mapa ne sadr\u017ei klju\u010d s kojim je pozvan, kreira taj klju\u010d i postavlja njegovu vrijednost na neku zadanu vrijednost, u ovom slu\u010daju ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),". Da smo htjeli po\u010deti od neke druge vrijednosti, morali bismo eksplicitno provjeravati nalazi li se klju\u010d u mapi naredbom ",(0,r.kt)("inlineCode",{parentName:"p"},"count"),", te postaviti tu vrijednost ako klju\u010d ne postoji. Jo\u0161 jedna stvar koju ste mogli primijetiti jest da se range-based for petljom kroz parove iterira uzlazno ovisno o klju\u010du. "),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o mapi mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/map/map/"},"ovdje"),"."),(0,r.kt)("h2",{id:"red"},"Red"),(0,r.kt)("p",null,"Red je tzv. FIFO struktura podataka (od eng. ",(0,r.kt)("em",{parentName:"p"},"first in, first out"),"). Podatke mo\u017eemo na kraj reda ubacivati i \u010ditati u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," slo\u017eenosti, te ih s po\u010detka reda mo\u017eemo \u010ditati i ukloniti u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," slo\u017eenosti. Struktura se koristi u nekoliko algoritama (npr. ",(0,r.kt)("a",{parentName:"p",href:"/docs/algoritmi-nad-grafovima-1/pretrazivanje-grafova#breadth-first-search"},"BFS"),"), a u C++-u je implementirana kao container ",(0,r.kt)("inlineCode",{parentName:"p"},"queue"),". Podatke na kraj reda dodajemo koriste\u0107i metodu ",(0,r.kt)("inlineCode",{parentName:"p"},"push"),", a uklanjamo ih s po\u010detka reda koriste\u0107i metodu ",(0,r.kt)("inlineCode",{parentName:"p"},"pop"),". Podacima s po\u010detka pristupamo koriste\u0107i metodu ",(0,r.kt)("inlineCode",{parentName:"p"},"front"),", a s kraja metodom ",(0,r.kt)("inlineCode",{parentName:"p"},"back"),". Veli\u010dinu reda provjeravamo metodom ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),", a metodom ",(0,r.kt)("inlineCode",{parentName:"p"},"empty")," provjeravamo je li red prazan. Sve navedene metode su konstantne slo\u017eenosti."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'queue<int> q;\nq.push(1);\nq.push(2);\nq.push(3);\n\ncout << q.size() << " " << q.empty() << "\\n";\n\nwhile(!q.empty()) {\n    cout << q.front() << " ";\n    q.pop();\n}\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"3 0\n1 2 3\n")),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o redu mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/queue/queue/"},"ovdje"),"."),(0,r.kt)("h2",{id:"prioritetni-red"},"Prioritetni red"),(0,r.kt)("p",null,"Prioritetni red je struktura sli\u010dna redu, no u prioritetnom redu imamo pristup najve\u0107em elementu u kolekciji. Dodavanje i uklanjanje elementa iz strukture se odvija u logaritamskoj slo\u017eenosti, a pristup najve\u0107em elementu, pristup broju elemenata i provjera je li prioritetni red prazan se odvija u konstantnoj slo\u017eenosti. Pomo\u0107u prioritetnog reda se npr. mo\u017ee implementirati ",(0,r.kt)("a",{parentName:"p",href:"/docs/algoritmi-nad-grafovima-1/najkraci-putovi#dijkstrin-algoritam"},"Dijkstrin algoritam"),". U C++-u je implementiran u containeru ",(0,r.kt)("inlineCode",{parentName:"p"},"priority_queue"),", a metode dodavanja i uklanjanja su redom ",(0,r.kt)("inlineCode",{parentName:"p"},"push")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"pop"),", dok su pristup najve\u0107em elementu, broju elemenata i provjeri je li prioritetni red prazan redom metode ",(0,r.kt)("inlineCode",{parentName:"p"},"top"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"empty"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'priority_queue<int> pq;\n\npq.push(2);\npq.push(3);\npq.push(1);\n\ncout << pq.size() << " " << pq.empty() << "\\n";\n\nwhile(!pq.empty()) {\n    cout << pq.top() << " ";\n    pq.pop();\n}\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"3 0\n3 2 1\n")),(0,r.kt)("p",null,"Osim tra\u017eenja najve\u0107eg elementa, mo\u017eemo kori\u0161tenjem komparatorskih funkcija iz standardne biblioteke implementirati i prioritetni red koji tra\u017ei najmanji element:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'priority_queue<int, vector<int>, greater<int>> pqMin;\n\npqMin.push(2);\npqMin.push(3);\npqMin.push(1);\n\ncout << pqMin.size() << " " << pqMin.empty() << "\\n";\n\nwhile(!pqMin.empty()) {\n    cout << pqMin.top() << " ";\n    pqMin.pop();\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"informacija")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("inlineCode",{parentName:"p"},"priority_queue")," se mo\u017ee parametrizirati samo tipom, ili tipom, unutarnjom strukturom i komparatorskom funkcijom, te zbog toga moramo kao parametar dati i ",(0,r.kt)("inlineCode",{parentName:"p"},"vector<int>")," koji je i zadana unutarnja struktura implementacije containera ",(0,r.kt)("inlineCode",{parentName:"p"},"priority_queue"),"."))),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o prioritetnom redu mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/queue/priority_queue/"},"ovdje"),"."),(0,r.kt)("h2",{id:"stog"},"Stog"),(0,r.kt)("p",null,"Stog je tzv. LIFO struktura (od eng. ",(0,r.kt)("em",{parentName:"p"},"last in, first out"),"). Podatke mo\u017eemo ubacivati, uklanjati i \u010ditati s vrha stoga u ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))," slo\u017eenosti. Pomo\u0107u stoga se npr. mo\u017ee implementirati ",(0,r.kt)("a",{parentName:"p",href:"/docs/algoritmi-nad-grafovima-1/pretrazivanje-grafova#depth-first-search"},"DFS"),", a u C++-u je implementiran containerom ",(0,r.kt)("inlineCode",{parentName:"p"},"stack")," koji ima metode ",(0,r.kt)("inlineCode",{parentName:"p"},"push"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pop")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"top")," koje redom odgovaraju ubacivanju, uklanjanju i \u010ditanju s vrha stoga, te metode ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"empty")," koje redom odgovaraju provjeri broja elemenata i provjeri je li stog prazan."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'stack<int> st;\n\nst.push(3);\nst.push(2);\nst.push(1);\n\ncout << st.size() << " " << st.empty() << "\\n";\n\nwhile(!st.empty()) {\n    cout << st.top() << " ";\n    st.pop();\n}\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"3 0\n1 2 3 \n")),(0,r.kt)("p",null,"Dokumentaciju i jo\u0161 podataka o stogu mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/stack/stack/"},"ovdje"),"."),(0,r.kt)("h2",{id:"iteratori"},"Iteratori"),(0,r.kt)("p",null,"Tijekom rada s ",(0,r.kt)("em",{parentName:"p"},"containerima")," kao \u0161to su ",(0,r.kt)("inlineCode",{parentName:"p"},"vector")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"set"),", \u010desto \u0107ete se susretati s funkcijama koje kao parametre primaju ",(0,r.kt)("em",{parentName:"p"},"iteratore"),". U ovom \u010dlanku \u0107emo govoriti o iteratorima i dat \u0107emo nekoliko primjera iteratora za koje biste trebali znati."),(0,r.kt)("p",null,"Iteratori slu\u017ee kao pokaziva\u010di na elemente odre\u0111enih ",(0,r.kt)("em",{parentName:"p"},"containera"),". Pomo\u0107u njih mo\u017eemo, kao \u0161to im ime govori, iterirati kroz elemente odre\u0111enih struktura te ih koristiti kao parametre u brojnim algoritmima standardne biblioteke. Podacima na koje iteratori pokazuju pristupamo koriste\u0107i operator ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"."),(0,r.kt)("p",null,"Uzmimo za primjer jedan ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," i jedan ",(0,r.kt)("inlineCode",{parentName:"p"},"vector"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"set<int> s = {1, 2, 3, 4, 5, 6}; // jos jedan nacin za dodati elemente u set\nvector<int> v = {1, 1, 2, 3, 5, 8}; // jos jedan nacin za dodati elemente u vektor\n")),(0,r.kt)("p",null,"Prva funkcija kojom \u0107emo se baviti je \u010dlanska funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"begin"),". Ona vra\u0107a iterator na prvi element niza, pa bi za na\u0161e ",(0,r.kt)("em",{parentName:"p"},"containere")," iz primjera to izgledalo ovako (sjetimo se da podacima pristupamo koriste\u0107i operator ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'cout << *s.begin() << "\\n"; // ispisuje 1\ncout << *v.begin() << "\\n"; // ispisuje 1\n')),(0,r.kt)("p",null,"Druga funkcija je funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),". Ona vra\u0107a iterator na poziciju ",(0,r.kt)("strong",{parentName:"p"},"nakon")," posljednjeg elementa niza. Mo\u017eemo je koristiti u for petlji da bismo provjerili jesmo li do\u0161li do kraja iteracije, a tako\u0111er se koristi u mno\u0161tvu funkcija o kojima \u0107emo kasnije vi\u0161e govoriti."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// it++ mijenja iterator tako da pokazuje na sljede\u0107i element niza\nfor(auto it = s.begin(); it != s.end(); it++) {\n    cout << *it << " ";\n}\n')),(0,r.kt)("p",null,"Ovaj isje\u010dak koda \u0107e ispisati sve \u010dlanove seta."),(0,r.kt)("p",null,"Sli\u010dne funkcijama ",(0,r.kt)("inlineCode",{parentName:"p"},"begin")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"end")," su funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"rbegin")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"rend")," koje vra\u0107aju ",(0,r.kt)("em",{parentName:"p"},"reverse iteratore"),", odnosno iterator koji pokazuje na posljednji element niza i iterator koji pokazuje na poziciju ",(0,r.kt)("strong",{parentName:"p"},"prije")," prvog elementa niza."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'for(auto it = s.rbegin(); it != s.rend(); it++) {\n    cout << *it << " ";\n}\n')),(0,r.kt)("p",null,"Ovaj isje\u010dak \u0107e ispisati sve \u010dlanove seta, ali obrnutim redoslijedom."),(0,r.kt)("p",null,"Funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"prev")," kao argumente primaju iterator i cijeli broj ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", a vra\u0107aju iterator za ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," pozicija ispred ili iza zadanog iteratora. Ako ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," nije zadan, podrazumijevana vrijednost je 1. Ove funkcije ne mijenjaju poziciju zadanog iteratora."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'cout << *next(s.begin(), 2) << "\\n"; // ispisuje 3\ncout << *prev(s.end(), 2) << "\\n"; // ispisuje 5\n')),(0,r.kt)("p",null,"Funkcija ",(0,r.kt)("inlineCode",{parentName:"p"},"advance")," kao argumente prima iterator i cijeli broj ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", te ",(0,r.kt)("strong",{parentName:"p"},"mijenja")," zadani iterator tako da mu pomakne poziciju za ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," mjesta."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'auto it = s.begin();\ncout << *it << "\\n"; // ispisuje 1\n\nadvance(it, 3);\ncout << *it << "\\n"; // ispisuje 4\n\nadvance(it, -1);\ncout << *it << "\\n"; // ispisuje 3\n')),(0,r.kt)("p",null,"U poglavlju o sortiranju i pretra\u017eivanju \u0107emo pri\u010dati vi\u0161e o prakti\u010dnim primjenama iteratora."),(0,r.kt)("h2",{id:"pair"},"Pair"),(0,r.kt)("p",null,"\u017delimo li u jedan objekt spremiti dva podatka (npr. ime i godine neke osobe), koristimo strukturu pair. Definiramo je na jedan od sljede\u0107ih na\u010dina:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'pair<string, int> ivan = {"Ivan", 22};\npair<string, int> luka = make_pair("Luka", 24);\n')),(0,r.kt)("p",null,"Podacima mo\u017eemo pristupati koriste\u0107i \u010dlanove ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," i ",(0,r.kt)("inlineCode",{parentName:"p"},"second"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cout << ivan.first << " " << ivan.second << "\\n";\ncout << luka.first << " " << luka.second << "\\n";\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivan 22\nLuka 24\n")),(0,r.kt)("p",null,"Mo\u017eemo im pristupiti i kori\u0161tenjem funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"tie"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'string lukaName;\nint lukaAge;\n\ntie(lukaName, lukaAge) = luka;\n\ncout << lukaName << " " << lukaAge << "\\n";\n')),(0,r.kt)("p",null,"Dobijemo o\u010dekivani ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Luka 24\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"oprez")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Sljede\u0107i tekst se odnosi na ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/C%2B%2B17"},"C++17")," i kasnije verzije jezika C++!"))),(0,r.kt)("p",null,"Jo\u0161 jedan na\u010din pristupa parovima je kori\u0161tenjem tzv. ",(0,r.kt)("em",{parentName:"p"},"structured bindinga"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'vector<pair<string, int>> people = {\n    {"Ivan", 22},\n    {"Vice", 24},\n    {"Marko", 32},\n    {"Lucia", 34}\n};\n\nauto [ivanName, ivanAge] = people[0];\n\ncout << ivanName << " is " << ivanAge << " years old.";\n')),(0,r.kt)("p",null,"Dobit \u0107emo o\u010dekivani ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivan is 22 years old.\n")),(0,r.kt)("p",null,"Sli\u010dno ih mo\u017eemo koristiti i kad koristimo range-based for petlju:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'for(auto &[name, age] : people) {\n    cout << name << " is " << age << " years old.\\n";\n}\n')),(0,r.kt)("p",null,"Dobijemo sljede\u0107i ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivan is 22 years old.\nVice is 24 years old.\nMarko is 32 years old.\nLucia is 34 years old.\n")),(0,r.kt)("p",null,"Vi\u0161e o strukturi pair mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/utility/pair/pair/"},"ovdje"),"."),(0,r.kt)("h2",{id:"tuple"},"Tuple"),(0,r.kt)("p",null,"\u017delimo li spremiti vi\u0161e podataka (npr. ime, godine i prosjek ocjena), mo\u017eemo koristiti tuple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'tuple<string, int, double> ivana = {"Ivana", 22, 4.8};\ntuple<string, int, double> lucija = make_tuple("Lucija", 23, 3.95); \n')),(0,r.kt)("p",null,"\u010clanovima pristupamo koriste\u0107i funkciju ",(0,r.kt)("inlineCode",{parentName:"p"},"get<>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cout << get<0>(ivana) << " " << get<1>(ivana) << " " << get<2>(ivana) << "\\n";\ncout << get<0>(lucija) << " " << get<1>(lucija) << " " << get<2>(lucija) << "\\n";\n')),(0,r.kt)("p",null,"Ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivana 22 4.8\nLucija 23 3.95\n")),(0,r.kt)("p",null,"Mo\u017eemo pristupiti podacima i kori\u0161tenjem funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"tie"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'string ivanaName;\nint ivanaAge;\ndouble ivanaAvg;\n\ntie(ivanaName, ivanaAge, ivanaAvg) = ivana;\ncout << ivanaName << " " << ivanaAge << " " << ivanaAvg << "\\n";\n')),(0,r.kt)("p",null,"Dobijemo o\u010dekivani ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ivana 22 4.8\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"oprez")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Sljede\u0107i tekst se odnosi na ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/C%2B%2B17"},"C++17")," i kasnije verzije jezika C++!"))),(0,r.kt)("p",null,"Kao i za parove, i za tuple mo\u017eemo koristiti ",(0,r.kt)("em",{parentName:"p"},"structured binding"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'vector<tuple<string, string, int, int>> matches = {\n    {"Croatia", "Nigeria", 2, 0},\n    {"Argentina", "Croatia", 0, 3},\n    {"Iceland", "Croatia", 1, 2}\n};\n\nauto [arg, cro, argScore, croScore] = matches[1];\n\ncout << arg << " " << argScore << ":" << croScore << " " << cro << "\\n";\n\nfor(auto &[team1, team2, score1, score2] : matches) {\n    cout << team1 << " " << score1 << ":" << score2 << " " << team2 << "\\n";\n}\n')),(0,r.kt)("p",null,"Dobijemo o\u010dekivani ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Argentina 0:3 Croatia\nCroatia 2:0 Nigeria\nArgentina 0:3 Croatia\nIceland 1:2 Croatia\n")),(0,r.kt)("p",null,"Vi\u0161e o strukturi tuple mo\u017eete prona\u0107i ",(0,r.kt)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/tuple/tuple/"},"ovdje"),"."),(0,r.kt)("h2",{id:"ostali-containeri"},"Ostali containeri"),(0,r.kt)("p",null,"Osim navedenih, na sljede\u0107im linkovima mo\u017eete prona\u0107i i dokumentaciju ostalih ",(0,r.kt)("em",{parentName:"p"},"containera")," koji bi vam mogli zatrebati tijekom rje\u0161avanja zadataka:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/deque/deque/"},"deque")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/forward_list/forward_list/"},"forward_list")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/list/list/"},"list")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_set/unordered_set/"},"unordered_set")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_set/unordered_multiset/"},"unordered_multiset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_map/unordered_map/"},"unordered_map")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/map/multimap/"},"multimap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cplusplus.com/reference/unordered_map/unordered_multimap/"},"unordered_multimap"))),(0,r.kt)("h2",{id:"vrijednost-ili-referenca"},"Vrijednost ili referenca?"),(0,r.kt)("p",null,"Prilikom slanja containera kao argumente funkcija bitno je pripaziti na to \u0161aljemo li container kao vrijednost (eng. ",(0,r.kt)("em",{parentName:"p"},"pass by value"),") ili kao referencu (eng. ",(0,r.kt)("em",{parentName:"p"},"pass by reference"),"). Pogledajmo sljede\u0107u funkciju:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'void printAddressValue(vector<int> v) {\n    cout << "By value:\\t" << &v[0] << "\\n";\n}\n')),(0,r.kt)("p",null,"Ova funkcija ispisuje adresu prvog elementa vektora ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),". Pogledajmo sad sljede\u0107i isje\u010dak koda:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'vector<int> v = {1, 2, 3};\n\ncout << "v[0] address:\\t" << &v[0] << "\\n";\n\nprintAddressValue(v);\n')),(0,r.kt)("p",null,"Ovaj isje\u010dak dat \u0107e sljede\u0107i ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"v[0] address:   0x55c99becbeb0\nBy value:       0x55c99becc2e0\n")),(0,r.kt)("p",null,"Iz ovoga mo\u017eemo vidjeti da poziv funkcije ",(0,r.kt)("inlineCode",{parentName:"p"},"printAddressValue")," kopira prvu vrijednost vektora ",(0,r.kt)("inlineCode",{parentName:"p"},"v")," na novu adresu. Takvo pona\u0161anje se nekad slu\u010dajno mo\u017ee ponoviti nekoliko stotina ili tisu\u0107a puta (npr. u rekurzivnim funkcijama), \u0161to mo\u017ee uzrokovati gubitak bodova na natjecanju zbog prekora\u010denja memorijskog ograni\u010denja. Ako \u017eelimo koristiti uvijek iste podatke bez kopiranja, bolje je poslati referencu na vektor kao argument funkcije:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'void printAddressReference(vector<int> &v) {\n    cout << "By reference:\\t" << &v[0] << "\\n";\n}\n')),(0,r.kt)("p",null,"Pozovemo li tu funkciju za vektor ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),", dobit \u0107emo o\u010dekivani ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"By reference:   0x55c99becbeb0\n")),(0,r.kt)("p",null,"Vidimo da je ta adresa jednaka onoj koju smo dobili u funkciji ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),", iz \u010dega mo\u017eemo zaklju\u010diti da se podaci ne kopiraju."),(0,r.kt)("p",null,"Sli\u010dna stvar se doga\u0111a u range-based for petljama:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cout << "v addresses:\\t\\t\\t";\nfor(int i=0; i<v.size(); i++) {\n    cout << &v[i] << " ";\n}\n\ncout << "\\nrange-based for by value:\\t";\nfor(auto it : v) {\n    cout << &it << " ";\n}\n\ncout << "\\nrange-based for by reference:\\t";\n\nfor(auto &it : v) {\n    cout << &it << " ";\n}\n')),(0,r.kt)("p",null,"Dobijemo sljede\u0107i ispis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"v addresses:                    0x55c99becbeb0 0x55c99becbeb4 0x55c99becbeb8 \nrange-based for by value:       0x7ffcc1bbf8ec 0x7ffcc1bbf8ec 0x7ffcc1bbf8ec \nrange-based for by reference:   0x55c99becbeb0 0x55c99becbeb4 0x55c99becbeb8 \n")),(0,r.kt)("p",null,"Iz \u010dega vidimo da se prilikom kori\u0161tenja referenci vrijednosti ne kopiraju na novu adresu."))}u.isMDXComponent=!0}}]);